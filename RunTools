import requests

def execute_tool(tool_url):
    try:
        # Download the script content
        response = requests.get(tool_url)
        response.raise_for_status()  # Raise an exception for HTTP errors
        
        # Step 2: Execute the content directly using exec()
        script_content = response.text

        # Get the global context to pass to exec
        global_context = globals()

        # Execute the script within the global context, which includes 'check_file_not_in_folder'
        exec(script_content, global_context)
        
    except requests.exceptions.RequestException as e:
        print(f"Failed to download the script: {e}")
    except Exception as e:
        print(f"Error executing the script: {e}")

def choose_and_execute_tool():
    # List of available tools (with names and URLs)
    tools = {
        1: {'name': 'File Checker', 'url': 'https://raw.githubusercontent.com/bilalbinkhan1122/UploadPOSTSFromPC/refs/heads/main/UploadPostsFromPC.txt'},
        2: {'name': 'Folder Organizer', 'url': 'https://raw.githubusercontent.com/bilalbinkhan1122/RunAll/refs/heads/main/runtool2'},  # Example
        3: {'name': 'Data Processor', 'url': 'https://raw.githubusercontent.com/bilalbinkhan1122/RunAll/refs/heads/main/runtool3'},  # Example
    }

    # Show the options to the user
    print("Available tools:")
    for key, value in tools.items():
        print(f"{key}. {value['name']}")

    # Prompt the user to choose a tool
    try:
        choice = int(input(f"Choose a tool to execute (1-{len(tools)}): "))
        if choice in tools:
            print(f"Executing {tools[choice]['name']}...")
            execute_tool(tools[choice]['url'])
        else:
            print("Invalid choice, please select a valid tool.")
    except ValueError:
        print("Invalid input, please enter a number.")

# Call the function to choose and execute a tool
choose_and_execute_tool()
